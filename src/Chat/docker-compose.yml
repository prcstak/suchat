version: '3.8'


services:

  server:
    build:
      context: ./server
      dockerfile: ./Chat.Api/Dockerfile
    container_name: 'server'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=Chat;Username=postgres;Password=admin
      - RabbitMQ__Hostname=rabbitmq
      - RabbitMQ__Port=5672
      - AWS__ServiceURL=http://s3:8000
      - AWS__AccessKey=access
      - AWS__AccessSecret=secret
      - AWS__Bucket=files
    ports:
      - "5225:80"
    depends_on:
      - s3

  client:
    build:
      context: ./client
      dockerfile: ./Dockerfile
    ports:
      - "5173:5173"

  mqconsumer:
    build:
      context: ./server
      dockerfile: ./Chat.BackgroundService/Dockerfile

  db:
    image: postgres
    container_name: 'db'
    ports:
      - "7000:5432"
    environment:
      - 15672:15672
    restart: always

  s3:
    image: zenko/cloudserver
    container_name: "s3"
    ports:
      - 8000:8000
    environment:
      - SCALITY_ACCESS_KEY_ID=access
      - SCALITY_SECRET_ACCESS_KEY=secret
      - S3DATA=multiple
      - S3BACKEND=mem
      - ENDPOINT=s3
    restart: always