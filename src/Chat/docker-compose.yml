version: '3.8'

services:

  api:
    build:
      context: ./server
      dockerfile: ./Chat.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=Chat;Username=postgres;Password=admin
      - RabbitMQ__Hostname=rabbitmq
      - RabbitMQ__Port=5672
      - AWS__ServiceURL=http://s3:9000
      - AWS__AccessKey=minio_access_key
      - AWS__AccessSecret=minio_secret_key
    ports:
      - "5225:80"
    depends_on:
      - db

  client:
    build:
      context: ./client
      dockerfile: ./Dockerfile
    environment:
      - HOST=0.0.0.0
    ports:
      - "5173:5173"

  mqconsumer:
    build:
      context: ./server
      dockerfile: ./Chat.BackgroundService/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=Chat;Username=postgres;Password=admin
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__Hostname=rabbitmq
      - RabbitMQ__Port=5672
    ports:
      - "8001:80"
    depends_on:
      - rabbitmq
    restart: always

  db:
    image: postgres
    ports:
      - "7000:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "Chat"
    restart: always

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: "mongo"
      MONGO_INITDB_ROOT_PASSWORD: "admin"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    restart: always

  s3:
    image: minio/minio
    ports:
      - 9000:9000
    volumes:
      - ./storage/minio:/data
    environment:
      - MINIO_ACCESS_KEY=minio_access_key
      - MINIO_SECRET_KEY=minio_secret_key
    command: server /data --console-address ":9001"
    restart: always